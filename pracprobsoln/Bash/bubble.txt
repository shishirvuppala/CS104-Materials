#!/bin/bash

# Bubble sort function that sorts the array and counts swaps
bubble_sort() {
  local arr=("$@")
  local n=${#arr[@]}
  local swap_count=0

  for ((i = 0; i < n; i++)); do
    for ((j = 0; j < n - i - 1; j++)); do
      if [[ ${arr[j]} -gt ${arr[j+1]} ]]; then
        # Swap elements
        temp=${arr[j]}
        arr[j]=${arr[j+1]}
        arr[j+1]=$temp
        ((swap_count++))  # Increment swap count
      fi
    done
  done

  # Print the sorted array
  echo "${arr[@]}"
  # Print the number of swap operations performed
  echo $swap_count
}

# Check if at least one argument is provided
if [[ $# -lt 1 ]]; then
  echo "Usage: bash $0 <array of elements>"
  exit 1
fi

# Call bubble_sort with the input arguments (array of elements)
bubble_sort "$@"
